 (function () {
        'use strict';
        var demo = function (options) {
            //demo("options") 或者 new demo("options")
            if(!(this instanceof demo)){return new demo(options)};

            // 参数合并 extend方法体在下面
            this.options = this.extend({
                "x": "1",
                "y": "2",
                "z": "3"
            }, options);
            this.init();
            //初始化
        };
        demo.prototype = {
            init: function () {
                this.event();
            },
            // 参数合并方法体
            extend: function (obj, obj2) {
                for (var key in obj2) {
                    obj[key] = obj2[key];
                //    确保参数唯一
                }
                return obj
            },
            event:function () {
                var _this = this;

                //方法调用前的回调
                _this.options.open&&_this.options.open();

                //此处执行方法体，使用 this.options.x\this.options.y\this.options.z进行访问

                //打印参数
                console.log(this.options.x)

                // 方法结束的回调
                _this.options.close&&_this.options.close();
            }
        }
        //暴露对象
        window.demo = demo;
    }());

   // 使用方法 demo("args") 和 new demo("args")
   demo({
        "x": "111",
        "y": "3",
        "c":"ccc",
        open:function () {
            console.log("start")
        },
        close:function () {
            console.log("end")
        }
    });
